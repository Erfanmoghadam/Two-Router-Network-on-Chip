library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity routing is 
	port(
	flit : in std_logic_vector(11 downto 0); --comes from arbiter
	current : in integer;
	local_direction, north_direction, south_direction, east_direction, west_direction : out std_logic);
end routing;

architecture behavioral of routing is
	signal local, north, south, east, west : std_logic;
	signal x_destination, y_destination : INTEGER;
	signal x_node, y_node : INTEGER;
begin
	x_destination <= to_integer(unsigned(flit(4 downto 0))) mod 4 ;
	y_destination <= to_integer(unsigned(flit(4 downto 0))) / 4 ;
	x_node <= current mod 4;
	y_node <= current / 4;
		
	process (x_node, y_node, x_destination, y_destination)
	begin
		north <= '0';
		south <= '0';
		east <= '0';
		west <= '0';
		local <= '0';
		
		if (x_node < x_destination) then
			east <= '1';
		elsif (x_node > x_destination) then
			west <= '1';
		else
			if (y_node < y_destination) then
				south <= '1';
			elsif (y_node > y_destination) then
				north <= '1';
			else
				local <= '1';
			end if;
		end if;	
	end process;
	
	local_direction <= local; --it must goes to local buffer
	north_direction <= north;
	south_direction <= south;
	east_direction <= east;
	west_direction <= west;
	
end behavioral;
